<launch>
<include file="$(find ldlidar_stl_ros)/launch/ld19.launch">
    <arg name="fix_to_base_link" value="false"/>
</include>
<!-- <arg name="map_file" default="$(find offboard_py)/config/map.yaml"/> -->
<node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 1 base_link base_laser 100" />
<!-- <node pkg="robot_localization" type="ekf_localization_node" name="robot_localization_ekf_node_map" clear_params="true">
    <param name="frequency" value="10" />  
    <param name="sensor_timeout" value="0.2" />  
    <param name="two_d_mode" value="true" />
    <param name="publish_tf" value="true" />
    <param name="map_frame" value="map" />
    <param name="odom_frame" value="odom" />
    <param name="base_link_frame" value="base_link" />
    <param name="world_frame" value="map" />
    <param name="twist0" value="turtle1/sensors/twist" />
    <rosparam param="twist0_config">
    [false, false, false, false, false, false,
    true, true, false, false, false, true,
    false, false, false]</rosparam>
    <param name="pose0" value="turtle1/sensors/pose" />
    <rosparam param="pose0_config">
    [true, true, false, false, false, true,
    false, false, false, false, false, false,
    false, false, false]</rosparam>
    <remap from="odometry/filtered" to="odometry/filtered_map"/>
</node> -->
<node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen"> 
    <param name="max_iterations" value="10"/>
    <param name="use_imu" value="true"/>
    <param name="use_odom" value="false"/>
    <param name="use_vel" value="false"/>
    <param name="base_frame" value="base_link"/>
    <param name="fixed_frame" value="odom"/>
</node>
<node pkg="slam_toolbox" type="async_slam_toolbox_node" name="slam_toolbox" output="screen">
    <rosparam command="load" file="$(find offboard_py)/config/slam_toolbox_params.yaml" />
</node>
<!-- move_base -->
<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find offboard_py)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find offboard_py)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find offboard_py)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find offboard_py)/config/global_costmap_params.yaml" command="load" /> 
    <rosparam file="$(find offboard_py)/config/base_local_planner_params.yaml" command="load" />
 </node>
<node pkg="rviz" type="rviz" name="rviz" args="-d $(find offboard_py)/config/test.rviz"/>
</launch>
